I"ø#<p>Copulas are flexible statistical tools for modeling correlation structure between variables.</p>

<h2 id="background">Background</h2>

<p>Consider $p$ random variables, $X_1, \dots, X_p$. Specifying a distribution over these variables would allow us to directly model the covariance between them. However, specifying a proper model directly can become difficult or impossible in some cases. For example, when the variables have mixed data types (e.g., some are continuous and some are integer-valued), it‚Äôs not obvious how to specify a joint distribution over them. Furthermore, some distributions (e.g., the Poisson distribution) do not have a natural multivariate extension, like the Gaussian does.</p>

<p>Copulas solve these issues by dientangling two parts of the modeling decisions: specifying the joint distribution of the variables, and specifying the marginal distributions of the variables.</p>

<h2 id="sklars-theorem">Sklar‚Äôs Theorem</h2>

<p>Copulas have solid theoreteical foundations through Sklar‚Äôs Theorem (which was proven by Abe Sklar):</p>

<blockquote>
  <p>For any random variables $X_1, \dots, X_p$ with joint CDF $F(x_1, \dots, x_p)$ and marginal CDFs $F_j(x) = P(X_j \leq x)$, there exists a copula such that $F(x_1, \dots, x_p) = C(F_1(x_1), \dots, F_p(x_p))$.
Furthermore, if each $F_j(x)$ is continuous, then $C$ is unique.</p>
</blockquote>

<p>In essence, Sklar‚Äôs Theorem says that a joint CDF can be properly decomposed into the marginal CDFs and a copula that describes the variables‚Äô dependence on one another.</p>

<h2 id="copulas">Copulas</h2>

<p>More practically, a copula model is specified by two things</p>

<ul>
  <li>The copula $C_\phi$ (the multivariate CDF of the variables)</li>
  <li>The marginal CDFs $F_1, \dots, F_p$ of each variable</li>
</ul>

<p>Given these two quantities, a copula models the multivariate distribution function as</p>

\[F(x_1, \dots, x_p) = C_\phi(F_1(x_1), \dots, F_p(x_p)).\]

<p>In other words, the overall CDF of the variables is separable into the marginal for each variable and their joint CDF. This is often written as</p>

\[F(u_1, \dots, u_p) = C_\phi(u_1, \dots, u_p)\]

<p>where $u_j = F_j(x_j)$ is a uniformly-distributed variable because a valid CDF returns a number in $[0, 1]$. So, a copula can be described as a function that maps $[0, 1]^p$ to $[0, 1]$.</p>

<h2 id="likelihoods-for-copula-models">Likelihoods for copula models</h2>

<p>To write down and compute the likelihood for one of these models, we first need to be able to obtain the corresponding PDF. In particular, we need to take the derivative of $F(x_1, \dots, x_p)$ with respect to each variable. This yields</p>

\[\frac{\partial}{\partial u} F(x_1, \dots, x_p) = c_\phi(u) f_j(x_j; \theta_j)\]

<p>where $u = (u_1, \dots, u_p)^\top = (F_1(x_1), \dots, F_p(x_p))^\top$, $\theta$ is a parameter vector containing the paramters of the CDF, and $c_\phi(u) = \frac{\partial}{\partial u} C_\phi(u)$. The overall likelihood for a sample across all $p$ variables is then</p>

\[L(x) =  c_\phi(u) \prod\limits_{j = 1}^p f_j(x_j; \theta_j).\]

<h2 id="gaussian-copula">Gaussian copula</h2>

<p>In a Gaussian copula with Gaussian marginals, we define $C$ as</p>

\[C(u_1, \dots, u_p) = \Phi_\mathbf{C}(\Phi^{-1}(u_1), \dots, \Phi^{-1}(u_p) | \mathbf{C})\]

<p>where $u_j \in [0, 1]^p$, $\Phi$ is the standard normal CDF, and $\Phi_\mathbf{C}$ is the $p$-dimensional Gaussian CDF with correlation matrix $\mathbf{C}$.</p>

<p>Writing this out more fully, we have</p>

<p>\begin{align} F(x_1, \dots, x_p) &amp;= C_\phi(u_1, \dots, u_p) \\ &amp;= C_\phi(F_1(x_1), \dots, F_p(x_p)) \\ &amp;= \Phi_\mathbf{C}(\Phi^{-1}(F_1(x_1)), \dots, \Phi^{-1}(F_p(x_p))) \\ \end{align}</p>

<p>where $F_1, \dots, F_p$ are the marginal CDFs that can be specified by the modeler.</p>

<p>The density function of the Gaussian copula is then</p>

<p>\begin{align} \frac{d}{d \mathbf{u}} C_\phi(u) &amp;= \frac{d}{d \mathbf{u}} \Phi_\mathbf{C}(\mathbf{u}) \frac{d}{d \mathbf{u}} \Phi^{-1}(\mathbf{u}) \\ &amp;= \phi(\Phi^{-1}(\mathbf{u})) \frac{1}{\phi(\Phi^{-1}(\mathbf{u}))} \\ &amp;\propto |\mathbf{C}|^{-1/2} \exp\left( -\frac12 \mathbf{t}^\top \mathbf{C}^{-1} \mathbf{t} \right) \exp\left( \frac12 \mathbf{t}^\top \mathbf{t} \right) &amp; (\mathbf{t} = \Phi^{-1}(\mathbf{u})) \\ &amp;= |\mathbf{C}|^{-1/2} \exp\left( -\frac12 \mathbf{t}^\top (\mathbf{C}^{-1} - I) \mathbf{t} \right) \end{align}</p>

<p>where $\phi(\cdot)$ is the Gaussian pdf.</p>

<h2 id="copulas-as-latent-variable-models">Copulas as latent variable models</h2>

<p>Copula models also have an equivalent latent variable formulation. Let $Z_1, \dots, Z_p$ be latent variables distributed with the multivariate Gaussian structure</p>

\[(Z_1, \dots, Z_p)^\top \sim \mathcal{N}(0, \mathbf{C}).\]

<p>Then the observed variable $X_j$ is related to $Z_j$ by</p>

\[X_j = F_j^{-1}(\Phi(Z_j))\]

<p>where $F_j$ is the $j^{th}$ marginal CDF, and $\Phi$ is the standard normal CDF.</p>

<h2 id="sampling-from-copulas">Sampling from copulas</h2>

<p>We can use the LVM formulation above to sample from arbitrary copulas. Below is an example in Python to sample two correlated Poisson variables.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">norm</span>
<span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">multivariate_normal</span>
<span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">poisson</span>

<span class="c1"># Covariance of RVs
</span><span class="n">cov_mat</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span>
	<span class="p">[</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">0.7</span><span class="p">],</span>
	<span class="p">[</span><span class="mf">0.7</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">]])</span>

<span class="n">n</span> <span class="o">=</span> <span class="mi">1000</span>
<span class="n">p</span> <span class="o">=</span> <span class="mi">2</span>

<span class="c1"># Generate latent variables
</span><span class="n">Z</span> <span class="o">=</span> <span class="n">multivariate_normal</span><span class="p">.</span><span class="n">rvs</span><span class="p">(</span><span class="n">mean</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">p</span><span class="p">),</span> <span class="n">cov</span><span class="o">=</span><span class="n">cov_mat</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">n</span><span class="p">)</span>

<span class="c1"># Pass through standard normal CDF
</span><span class="n">Z_tilde</span> <span class="o">=</span> <span class="n">norm</span><span class="p">.</span><span class="n">cdf</span><span class="p">(</span><span class="n">Z</span><span class="p">)</span>

<span class="c1"># Inverse of observed distribution function
</span><span class="n">X</span> <span class="o">=</span> <span class="n">poisson</span><span class="p">.</span><span class="n">ppf</span><span class="p">(</span><span class="n">q</span><span class="o">=</span><span class="n">Z_tilde</span><span class="p">,</span> <span class="n">mu</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="c1"># Plot
</span><span class="n">plt</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">X</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">],</span> <span class="n">X</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p>This code generates two correlated Poisson variables:</p>

<p><img src="/assets/poisson_correlated_rvs.png" alt="Poisson RVs" /></p>

<h2 id="references">References</h2>

<ul>
  <li>Xue‚ÄêKun Song, Peter. ‚ÄúMultivariate dispersion models generated from Gaussian copula.‚Äù Scandinavian Journal of Statistics 27.2 (2000): 305-320.</li>
  <li>Smith, Michael Stanley. ‚ÄúBayesian approaches to copula modelling.‚Äù arXiv preprint arXiv:1112.4204 (2011).</li>
  <li>Dobra, Adrian, and Alex Lenkoski. ‚ÄúCopula Gaussian graphical models and their application to modeling functional disability data.‚Äù The Annals of Applied Statistics 5.2A (2011): 969-993.</li>
  <li>Professor Peter Bloomfield‚Äôs <a href="https://www.stat.ncsu.edu/people/bloomfield/courses/st810j/slides/copula.pdf">lecture slides</a>.</li>
</ul>
:ET